二分搜索(数组)
int binarySearch(int key)
{
	int left=0;
	int right=0;	
	int mid;
	while(left<right)
	{
		mid=(left+right)/2;
		if(key==A[mid])return 1;
		if(key>A[mid])left=mid+1;
		else if(key<A[mid])right=mid;
	}
	return 0;
}

二分搜索(lower_bound)
#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
int A[1000000], n;
int main(void)
{
	cin>>n;
	int i;
	for(i=0;i<n;i++)
	{
		scanf("%d",&A[i]);
	}
	int q,k,sum=0;
	cin>>q;
	for(int i=0;i<q;i++)
	{
		scanf("%d",&k);
		if(*lower_bound(A,A+n,k)==k)sum++;
	}
	cout<<sum<<endl;
	return 0;
}